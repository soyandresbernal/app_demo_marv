name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.7
        options: --privileged
        ports:
          - 8080:8080
          - 3000:3000
        volumes:
          - ${{ github.workspace }}/backend:/app/backend
          - ${{ github.workspace }}/frontend:/app/frontend
        env:
          SPRING_PROFILES_ACTIVE: test
          DATABASE_URL: "jdbc:h2:mem:testdb"

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Build and test backend
      run: |
        docker-compose -f docker-compose.yml up -d backend
        docker-compose -f docker-compose.yml exec backend ./mvnw clean test

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Build and test frontend
      run: |
        docker-compose -f docker-compose.yml up -d frontend
        docker-compose -f docker-compose.yml exec frontend npm ci
        docker-compose -f docker-compose.yml exec frontend npm test
        docker-compose -f docker-compose.yml exec frontend npm run build

    - name: Build Docker images
      run: docker-compose -f docker-compose.yml build

    - name: Run Docker containers
      run: docker-compose -f docker-compose.yml up -d
